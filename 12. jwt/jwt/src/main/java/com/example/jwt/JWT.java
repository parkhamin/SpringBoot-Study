package com.example.jwt;

public class JWT {
    /*
    JWT는 웹 표준으로써, 데이터의 JSON 객체를 사용하여 가볍고 자가 수용적인 방식으로 정보를 안전하게 전달할 수 있도록 설계된 토큰 키반의 인증 방식.
    JWT는 Header, Payload, Signature 세 부분으로 구성됨.
    Header는 JWT의 타입과 암호화 알고리즘을 포함하며 JSON 형식을 인코딩됨.
    Payload는 클레임 정보를 포함하며, JSON 형식으로 인코딩됨. 여기서 클레임 정보는 사용자 ID, 권한 등의 정보를 포함.
    Signature는 Header와 Payload를 조합한 후, base 64 encode url로 인코딩한 다음, 해쉬 알고리즘을 통해서 서명한 값. 해당 토큰의 유효성을 검증.

    JWT의 장점
    1. 토큰 기반의 인증 방식이므로, 서버 측에서 별도의 세션 저장소를 유지할 필요가 없다.
    2. JSON 형식으로 인코딩되므로, 다양한 플랫폼 간에 쉽게 전송 및 구현할 수 있다.
    3. Signature를 사용하여 무결성을 보장하므로, 토큰이 변조되었는지 여부를 쉽게 검증할 수 있다.

    JWT의 단점
    1. JWT의 크기가 커질 경우, 네트워크 대역폭이 증가하게 된다.
    2. JWT는 한 번 발급된 후에는 내부 정보를 수정할 수 없으므로, 만료 시간을 짧게 설정해야 한다.
    3. JWT를 탈취 당하면, 해당 토큰을 사용한 모든 요청이 인증되므로, 보안 위협이 될 수 있다.
    따라서, HTTPS와 같은 보안 프로토콜을 사용하여 JWT를 전송해야 한다.
     */
}
